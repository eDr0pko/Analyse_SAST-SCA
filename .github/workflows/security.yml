name: SecDevOps
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  securite:
    runs-on: ubuntu-latest

    steps:
    #SETUP
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Met à jour pip
        run: pip install --upgrade pip

      - name: Installer les dépendances à partir du requirements global
        run: pip install -r requirements.txt || true
        
    #Instalation de SNYK
      - name: Installer Snyk
        run: npm install -g snyk

    #SCAN DES DEPENDANCES
      - name: Exécuter l’analyse Snyk (SCA)
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test --file=requirements.txt --package-manager=pip --skip-unresolved=true --sarif > snyk-report-SCA.sarif || true

     #SCAN SAST
      - name: Exécuter l’analyse Snyk Code (SAST)
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk code test --sarif > snyk-report-SAST.sarif || true
        
    #SECRET SCANNING
      - name: Secret Scanning
        uses: gitleaks/gitleaks-action@v2

    #RAPPORT SCAN DE CODE
      - name: Upload du rapport Snyk Code
        uses: actions/upload-artifact@v4
        with:
          name: snyk-report-SAST
          path: snyk-report-SAST.sarif

    #RAPPORT SCAN DES DEPENDANCES
      - name: Upload du rapport Snyk SCA
        uses: actions/upload-artifact@v4
        with:
          name: snyk-report-SCA
          path: snyk-report-SCA.sarif




    # --- DAST avec OWASP ZAP ---
      # Lancement du serveur Python et installation des dépendances
      - name: Installer les dépendances Python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
      
      - name: Démarrer le serveur Python
        run: |
          # Lance le serveur dans le dossier courant
          nohup python3 -m http.server 8000 > server.log 2>&1 &
          echo "Serveur lancé sur http://127.0.0.1:8000"
          sleep 5  # laisse le temps au serveur de démarrer
      
      # Téléchargement de ZAP CLI
      - name: Télécharger OWASP ZAP CLI
        run: |
          wget https://github.com/zaproxy/zaproxy/releases/download/v2.13.0/ZAP_2_13_0_Linux.tar.gz
          tar -xvzf ZAP_2_13_0_Linux.tar.gz
          export PATH="$PWD/ZAP_2.13.0:$PATH"
      
      # Exécution du scan DAST
      - name: Exécuter le scan OWASP ZAP
        run: |
          zap.sh -daemon -port 8090 -host 127.0.0.1
          sleep 10
          zap-cli -p 8090 status -t 60
          zap-cli -p 8090 open-url http://127.0.0.1:8000
          zap-cli -p 8090 spider http://127.0.0.1:8000
          zap-cli -p 8090 active-scan http://127.0.0.1:8000 || true
          zap-cli -p 8090 report -o zap_report.html -f html || true
      
      # Upload du rapport
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap_report.html
      
