name: SecDevOps
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  securite:
    runs-on: ubuntu-latest

    steps:
    #SETUP
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Met à jour pip
        run: pip install --upgrade pip

      - name: Installer les dépendances à partir du requirements global
        run: pip install -r requirements.txt || true
        
    #Instalation de SNYK
      - name: Installer Snyk
        run: npm install -g snyk

    #SCAN DES DEPENDANCES
      - name: Exécuter l’analyse Snyk (SCA)
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test --file=requirements.txt --package-manager=pip --skip-unresolved=true --sarif > snyk-report-SCA.sarif || true

     #SCAN SAST
      - name: Exécuter l’analyse Snyk Code (SAST)
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk code test --sarif > snyk-report-SAST.sarif || true
        
    #SECRET SCANNING
      - name: Secret Scanning
        uses: gitleaks/gitleaks-action@v2

    #RAPPORT SCAN DE CODE
      - name: Upload du rapport Snyk Code
        uses: actions/upload-artifact@v4
        with:
          name: snyk-report-SAST
          path: snyk-report-SAST.sarif

    #RAPPORT SCAN DES DEPENDANCES
      - name: Upload du rapport Snyk SCA
        uses: actions/upload-artifact@v4
        with:
          name: snyk-report-SCA
          path: snyk-report-SCA.sarif




    # Installer les dépendances Python
      - name: Installer les dépendances Python
        run: pip install -r requirements.txt || true

    # Lancer le serveur Python de l'application (en arrière-plan)
      - name: Démarrer l'application Python
        run: |
          export FLASK_APP=app.py   # adapte selon ton fichier principal
          flask run --host=0.0.0.0 --port=8000 &
          sleep 5  # laisse le temps au serveur de démarrer

    # Exécuter le scan DAST avec OWASP ZAP
      - name: Exécuter le scan OWASP ZAP
        uses: zaproxy/action-full-scan@v0.9.0
        with:
          target: 'http://127.0.0.1:8000'
          fail_on_risk: 'medium'
        continue-on-error: true

    # Upload du rapport ZAP
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: ./zap_report.html

